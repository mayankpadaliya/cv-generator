{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mayank Study Thing\\\\100X\\\\02 LLM Module\\\\Cursor\\\\New project - 2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport toast from 'react-hot-toast';\nimport Header from './components/Header';\nimport CVForm from './components/CVForm';\nimport { saveCV } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: {\n    personalInfo: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      location: ''\n    },\n    education: [],\n    experience: [],\n    skills: [],\n    certifications: []\n  },\n  isLoading: false,\n  error: null,\n  activeSection: 'personalInfo',\n  selectedTemplate: 'modern'\n};\nfunction App() {\n  _s();\n  const [state, setState] = useState(initialState);\n  const handleDataChange = newData => {\n    setState(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        ...newData\n      }\n    }));\n  };\n  const handleGeneratePDF = async () => {\n    setState(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    try {\n      const result = await saveCV(state.data);\n      toast.success('CV data saved successfully!');\n      // TODO: Add PDF generation logic here once implemented\n    } catch (error) {\n      toast.error('Failed to save CV data');\n      setState(prev => ({\n        ...prev,\n        error: 'Failed to save CV data'\n      }));\n    } finally {\n      setState(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(CVForm, {\n          data: state.data,\n          isLoading: state.isLoading,\n          activeSection: state.activeSection,\n          onDataChange: handleDataChange,\n          onGeneratePDF: handleGeneratePDF\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Toaster","toast","Header","CVForm","saveCV","jsxDEV","_jsxDEV","initialState","data","personalInfo","firstName","lastName","email","phone","location","education","experience","skills","certifications","isLoading","error","activeSection","selectedTemplate","App","_s","state","setState","handleDataChange","newData","prev","handleGeneratePDF","result","success","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onDataChange","onGeneratePDF","_c","$RefreshReg$"],"sources":["D:/Mayank Study Thing/100X/02 LLM Module/Cursor/New project - 2/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport toast from 'react-hot-toast';\r\nimport Header from './components/Header';\r\nimport CVForm from './components/CVForm';\r\nimport { CVData, CVGeneratorState } from './types/cv';\r\nimport { saveCV } from './services/api';\r\n\r\nconst initialState: CVGeneratorState = {\r\n  data: {\r\n    personalInfo: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      location: '',\r\n    },\r\n    education: [],\r\n    experience: [],\r\n    skills: [],\r\n    certifications: [],\r\n  },\r\n  isLoading: false,\r\n  error: null,\r\n  activeSection: 'personalInfo',\r\n  selectedTemplate: 'modern',\r\n};\r\n\r\nfunction App() {\r\n  const [state, setState] = useState<CVGeneratorState>(initialState);\r\n\r\n  const handleDataChange = (newData: Partial<CVData>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      data: { ...prev.data, ...newData },\r\n    }));\r\n  };\r\n\r\n  const handleGeneratePDF = async () => {\r\n    setState(prev => ({ ...prev, isLoading: true }));\r\n    try {\r\n      const result = await saveCV(state.data);\r\n      toast.success('CV data saved successfully!');\r\n      // TODO: Add PDF generation logic here once implemented\r\n    } catch (error) {\r\n      toast.error('Failed to save CV data');\r\n      setState(prev => ({ ...prev, error: 'Failed to save CV data' }));\r\n    } finally {\r\n      setState(prev => ({ ...prev, isLoading: false }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Toaster position=\"top-right\" />\r\n      <Header />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <CVForm\r\n            data={state.data}\r\n            isLoading={state.isLoading}\r\n            activeSection={state.activeSection}\r\n            onDataChange={handleDataChange}\r\n            onGeneratePDF={handleGeneratePDF}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}