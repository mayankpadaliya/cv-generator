{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mayank Study Thing\\\\100X\\\\02 LLM Module\\\\Cursor\\\\New project - 2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport toast from 'react-hot-toast';\nimport Header from './components/Header';\nimport CVForm from './components/CVForm';\nimport { saveCV } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  data: {\n    personalInfo: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      location: ''\n    },\n    education: [],\n    experience: [],\n    skills: [],\n    certifications: []\n  },\n  isLoading: false,\n  error: null,\n  activeSection: 'personalInfo',\n  selectedTemplate: 'modern'\n};\nfunction App() {\n  _s();\n  const [state, setState] = useState(initialState);\n  const handleDataChange = newData => {\n    setState(prev => ({\n      ...prev,\n      data: {\n        ...prev.data,\n        ...newData\n      }\n    }));\n  };\n  const handleGeneratePDF = async () => {\n    setState(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    try {\n      // First save the CV data\n      const result = await saveCV(state.data);\n\n      // Then generate and download the PDF\n      const response = await fetch('http://localhost:5000/api/generate-pdf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cv_file_name: result.filename\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to generate PDF');\n      }\n\n      // Get the PDF blob\n      const blob = await response.blob();\n\n      // Create a URL for the blob\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a temporary link element and trigger download\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = result.filename.replace('.json', '.pdf');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n      toast.success('CV generated and downloaded successfully!');\n    } catch (error) {\n      toast.error(error instanceof Error ? error.message : 'Failed to generate CV');\n      setState(prev => ({\n        ...prev,\n        error: 'Failed to generate CV'\n      }));\n    } finally {\n      setState(prev => ({\n        ...prev,\n        isLoading: false\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto px-4 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(CVForm, {\n          data: state.data,\n          isLoading: state.isLoading,\n          activeSection: state.activeSection,\n          onDataChange: handleDataChange,\n          onGeneratePDF: handleGeneratePDF\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Toaster","toast","Header","CVForm","saveCV","jsxDEV","_jsxDEV","initialState","data","personalInfo","firstName","lastName","email","phone","location","education","experience","skills","certifications","isLoading","error","activeSection","selectedTemplate","App","_s","state","setState","handleDataChange","newData","prev","handleGeneratePDF","result","response","fetch","method","headers","body","JSON","stringify","cv_file_name","filename","ok","errorData","json","Error","detail","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","replace","appendChild","click","removeChild","revokeObjectURL","success","message","className","children","position","fileName","_jsxFileName","lineNumber","columnNumber","onDataChange","onGeneratePDF","_c","$RefreshReg$"],"sources":["D:/Mayank Study Thing/100X/02 LLM Module/Cursor/New project - 2/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport toast from 'react-hot-toast';\r\nimport Header from './components/Header';\r\nimport CVForm from './components/CVForm';\r\nimport { CVData, CVGeneratorState } from './types/cv';\r\nimport { saveCV } from './services/api';\r\n\r\nconst initialState: CVGeneratorState = {\r\n  data: {\r\n    personalInfo: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      location: '',\r\n    },\r\n    education: [],\r\n    experience: [],\r\n    skills: [],\r\n    certifications: [],\r\n  },\r\n  isLoading: false,\r\n  error: null,\r\n  activeSection: 'personalInfo',\r\n  selectedTemplate: 'modern',\r\n};\r\n\r\nfunction App() {\r\n  const [state, setState] = useState<CVGeneratorState>(initialState);\r\n\r\n  const handleDataChange = (newData: Partial<CVData>) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      data: { ...prev.data, ...newData },\r\n    }));\r\n  };\r\n\r\n  const handleGeneratePDF = async () => {\r\n    setState(prev => ({ ...prev, isLoading: true }));\r\n    try {\r\n      // First save the CV data\r\n      const result = await saveCV(state.data);\r\n      \r\n      // Then generate and download the PDF\r\n      const response = await fetch('http://localhost:5000/api/generate-pdf', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ cv_file_name: result.filename }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.detail || 'Failed to generate PDF');\r\n      }\r\n\r\n      // Get the PDF blob\r\n      const blob = await response.blob();\r\n      \r\n      // Create a URL for the blob\r\n      const url = window.URL.createObjectURL(blob);\r\n      \r\n      // Create a temporary link element and trigger download\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = result.filename.replace('.json', '.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n\r\n      toast.success('CV generated and downloaded successfully!');\r\n    } catch (error) {\r\n      toast.error(error instanceof Error ? error.message : 'Failed to generate CV');\r\n      setState(prev => ({ ...prev, error: 'Failed to generate CV' }));\r\n    } finally {\r\n      setState(prev => ({ ...prev, isLoading: false }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <Toaster position=\"top-right\" />\r\n      <Header />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        <div className=\"max-w-4xl mx-auto\">\r\n          <CVForm\r\n            data={state.data}\r\n            isLoading={state.isLoading}\r\n            activeSection={state.activeSection}\r\n            onDataChange={handleDataChange}\r\n            onGeneratePDF={handleGeneratePDF}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}