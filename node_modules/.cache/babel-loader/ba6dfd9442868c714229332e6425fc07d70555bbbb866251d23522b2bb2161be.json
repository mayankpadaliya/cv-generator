{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport const saveCV = async cvData => {\n  const response = await fetch(`${API_BASE_URL}/cv`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: cvData\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Failed to save CV data');\n  }\n  return response.json();\n};\nexport const getAllCVs = async () => {\n  const response = await fetch(`${API_BASE_URL}/cv`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch CVs');\n  }\n  return response.json();\n};\nexport const getCV = async filename => {\n  const response = await fetch(`${API_BASE_URL}/cv/${filename}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch CV');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","saveCV","cvData","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","json","getAllCVs","getCV","filename"],"sources":["D:/Mayank Study Thing/100X/02 LLM Module/Cursor/New project/src/services/api.ts"],"sourcesContent":["import { CVData } from '../types/cv';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const saveCV = async (cvData: CVData): Promise<{ message: string; filename: string }> => {\r\n  const response = await fetch(`${API_BASE_URL}/cv`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ data: cvData }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to save CV data');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getAllCVs = async (): Promise<Array<{ filename: string; data: CVData }>> => {\r\n  const response = await fetch(`${API_BASE_URL}/cv`);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch CVs');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\nexport const getCV = async (filename: string): Promise<CVData> => {\r\n  const response = await fetch(`${API_BASE_URL}/cv/${filename}`);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch CV');\r\n  }\r\n\r\n  return response.json();\r\n}; "],"mappings":"AAEA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,MAAM,GAAG,MAAOC,MAAc,IAAqD;EAC9F,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,KAAK,EAAE;IACjDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,IAAI,EAAER;IAAO,CAAC;EACvC,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,OAAOT,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAgE;EACvF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,KAAK,CAAC;EAElD,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,OAAOT,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAOC,QAAgB,IAAsB;EAChE,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,OAAOgB,QAAQ,EAAE,CAAC;EAE9D,IAAI,CAACb,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;EACvC;EAEA,OAAOT,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}